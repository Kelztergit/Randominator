@implements IDisposable

@if (!this.IsHidden)
{
    <div class="page-header px-4">
         @ChildContent
    </div>
}

@code {
    [Parameter]
    public RenderFragment ChildContent { get; set; }
    [Parameter]
    public bool Hide { get; set; } = false;
    [Parameter]
    public bool HideWhenEmpty { get; set; } = true;

    public bool IsHidden => this.Hide || (this.IsEmpty && this.HideWhenEmpty);
    public bool IsEmpty => this.ChildContent == null;

    protected override void OnInitialized()
    {
        this.PageHeaderEditor.OnTitleChanged += OnTitleChanged;
    }

    private void OnTitleChanged(object sender, string content)
    {
        this.ChildContent = 
            @<h1 class="header-title">@content</h1>;
        this.StateHasChanged();
    }

    void IDisposable.Dispose()
    {
        this.PageHeaderEditor.OnTitleChanged -= OnTitleChanged;
    }
}