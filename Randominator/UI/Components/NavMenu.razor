@using TehGM.Randominator.Features.Player
@inject NavigationManager Navigation
@inject IRandomizer Randomizer
@inject IPlayerRefresher PlayerRefresher
@inject IOptions<PlayerOptions> PlayerOptions
@implements IDisposable

<div class="nav-menu">
    <div class="top-row ps-3 navbar navbar-dark">
        <div class="container-fluid">
            <a class="navbar-brand" href="">@AppInfo.Name v@(AppInfo.Version)</a>
            <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
                <span class="navbar-toggler-icon"></span>
            </button>
        </div>
    </div>
    
    <div class="nav-menu-items @this.NavMenuClass">
        <nav class="flex-column">
            <div class="nav-item px-3" @onclick="ToggleNavMenu">
                <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                    <span class="oi oi-home" aria-hidden="true"></span> Home
                </NavLink>
            </div>
            @if (this._showPlayer)
            {
                <div class="nav-item px-3">
                    <NavLink class="nav-link rainbow-text" href="player" @onclick="OnPlayerClicked">
                        <span class="oi oi-musical-note" aria-hidden="true"></span> Player
                    </NavLink>
                </div>
            }
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="about">
                    <span class="oi oi-info" aria-hidden="true"></span> About
                </NavLink>
            </div>
            <hr/>
            <div class="nav-item px-3">
                <a class="nav-link" @onclick="ToggleMemeGenerators">
                     <span class="bi bi-hypnotize" aria-hidden="true"></span> Meme Generators
                </a>
            </div>
            <div class="nav-item px-3 @this.MemeGeneratorsClass">
                <NavLink class="nav-link" href="generators/mobile-game-name">
                     <span class="bi bi-hypnotize" aria-hidden="true"></span> Mobile Game Name
                </NavLink>
            </div>
            <div class="nav-item px-3 @this.MemeGeneratorsClass">
                <NavLink class="nav-link" href="generators/programming-standards">
                     <span class="bi bi-hypnotize" aria-hidden="true"></span> Programming Standards
                </NavLink>
            </div>
        </nav>
    
    </div>

    <div class="copyright @this.NavMenuClass">
        <p>
            <InlineCopyright/>
        </p>
    </div>
</div>


@code {
    private bool _collapseNavMenu = true;
    private bool _collapseMemeGenerators = false;
    private bool _showPlayer;

    private string NavMenuClass => this._collapseNavMenu ? "collapse" : string.Empty;
    // TODO: remove false to unlock collapsing
    private string MemeGeneratorsClass => this._collapseMemeGenerators && false ? "sub-item hidden" : "sub-item";

    protected override void OnInitialized()
    {
        base.OnInitialized();
        this._showPlayer = this.Randomizer.RollChance(this.PlayerOptions.Value.PlayerAppearChance);
        this.Navigation.LocationChanged += OnLocationChanged;
    }

    private void ToggleNavMenu()
        => this._collapseNavMenu = !this._collapseNavMenu;

    private void ToggleMemeGenerators()
        => this._collapseMemeGenerators = !this._collapseMemeGenerators;

    private void OnPlayerClicked()
        => this.PlayerRefresher.Refresh();

    private void OnLocationChanged(object sender, LocationChangedEventArgs e)
    {
        this._collapseNavMenu = true;
        base.StateHasChanged();
    }

    void IDisposable.Dispose()
        => this.Navigation.LocationChanged -= OnLocationChanged;
}
